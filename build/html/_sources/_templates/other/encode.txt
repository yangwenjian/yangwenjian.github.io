


=========================================
Encoding and Decoding
=========================================
编码与解码在编程中参数传递中十分有用，如不小心处理，将会吃大亏。

最佳实践
=========================================
来看下我遇到的几个问题。

零宽字符
-----------------------------------------
第一个碰到的问题就是个大坑，著名的零宽字符--'/u200B'。

怎么碰到的呢，我们做restapi，client端做请求时，url中混进了零宽字符。
怎么发现的呢，这个问题是一个同事碰到的，说怎么访问也访问不到服务端的代码，另一个同事就开始帮忙调试，调试几个来回也没发现，最后他意外的重新手打了一遍那个url就好使了。
这引起了我的注意，同事把那段url放到编码工具上查看，发现最后一段多了'/u200B'，上网一查一看是零宽字符，在某些场合是很有用处的，在我们这里就是个大坑了。

罪魁祸首是Openstack官网上的api，我们是从那里复制粘贴到自己的代码中，上面的url中就混进了零宽字符。

回车转移
-----------------------------------------
大家都知道回车符是'/n'，其实在windows平台上，文本的回车符是'/t/n'，在linux平台上，回车符才是'/n'，

其实linux上有工具将windows的文本转意为linux的文本，**dos2unix**。
将要被转意的文本作为参数即可，就可以很轻松得到unix的文本了。


乱码转换问题
==========================================

gbk-utf-8
------------------------------------------
前两天把windows的内容导入到linux服务器上，发现所有中文内容都变成乱码了，原因是windows使用gbk进行编码，linux使用utf-8编码，这样就出现乱码，可以通过如下方式解决：

1. 使用dos2unix工具；
2. convmv -f gbk -t utf-8 --notest files 解决名称乱码；
3. iconv -f gdb -t utf-8 filename 解决内容乱码；
4. mid3iconv -e gdk \*.mp3 解决MP3标签乱码。
