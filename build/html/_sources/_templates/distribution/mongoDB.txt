


=======================================
NoSQL and MongoDB
=======================================

SQL vs NoSQL
=======================================

History
---------------------------------------
SQL：persistency, transaction, integration;

NoSQL：non-relational, cluster-friendly,schema-less;

DataModal
---------------------------------------
* Document: mongoDB;
* Column-family: Cassandra, HBASE;
* Graph: Neo4j;
* Key-Value: redis;

其中Document和Key-Value类似，只是Document-base的存储更transparent;

Transaction
---------------------------------------
RDBMS == ACID;

NoSQL == Base;

NoSQL并不那么依赖于事务，只要操作是aggregate boundry的；

single aggregate == atomic, consistency, isolation, durable;

Consistency分为logical和replication，其中logical在单机或者集群sharding时都需要注意，replication在集群中需要注意；

CAP原则：在Partion保证的情况下，只能在consistency和availability做选择；

SQL or NoSQL
---------------------------------------
区别在于组织数据结构的方式

.. code::

    SQL: schema, 组织好的数据，优美的格式，高效的sql查询，join连接多表，ACID，structure unchanging;
         减少重复，防止变化，覆盖业务，交易时事务；

.. code::

    NoSQL: data not clear, flexible, 关联较少， large volumes, cloudcomputing, scale across data centers, rapid development;

MongDB
=======================================
* MongoDB is an open-source document database that provides high performance, high availability, and automatic scaling.
* MongoDB stores data records as BSON documents. BSON is a binary representation of JSON documents, though it contains more data types than JSON. 

Key Feature
---------------------------------------
* High Performance
  
  + reduces I/O activity
  + Indexes support faster queries
* Rich Query Language

  + Data Aggregation
  + Text Search and Geospatial Queries
* High Availability

  + automatic failover
  + data redundancy
* Horizontal Scalability

  + Sharding distributes data across a cluster of machines
  + creating zones of data based on the shard key
* Support for Multiple Storage Engines

  + WiredTiger Storage Engine
  + In-Memory Storage Engine
  + MMAPv1 Storage Engine

Document
---------------------------------------
The maximum BSON document size is 16 megabytes.
The maximum document size helps ensure that a single document cannot use excessive amount of RAM or,
during transmission, excessive amount of bandwidth.

BSON Types
---------------------------------------
ObjectId
```````````````````````````````````````
In MongoDB, each document stored in a collection requires a unique _id field that acts as a primary key.

* a 4-byte value representing the seconds since the Unix epoch
* a 3-byte machine identifier
* a 2-byte process id
* a 3-byte counter, starting with a random value

ObjectId Ordering:

* in the mongo shell, you can access the creation time of the ObjectId, using the ObjectId.getTimestamp() method.
* sorting on an _id field that stores ObjectId values is roughly equivalent to sorting by creation time.
* Only contain one second of temporal resolution, so ObjectId values created within the same second do not have a guaranteed ordering.
* Are generated by clients, which may have differing system clocks.

Data Types:

* String: UTF-8, drivers for each programming language convert from the language’s string format to UTF-8 when serializing and deserializing BSON.
* Timestamps: 64 bit, 32 bits time_t value, 32 bits an incrementing ordinal for operations within a given second..
* Date: 64-bit integer that represends the milliseconds since the Unix epoch; singed.

Objects Comparison:

* Recursively compare key-value pairs in the order that they appear within the BSON object.
* Compare the key field names.
* If the key field names are equal, compare the field values.
* If the field values are equal, compare the next key/value pair (return to step 1). An object without further pairs is less than an object with further pairs.
